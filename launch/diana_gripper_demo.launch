<?xml version="1.0"?>
<launch>
  <!-- launch the (real) diana gripper (= SCservo gripper) in rviz.
       Also uploads diana_gripper URDF model, and gazebo controllers.
   -->


  <arg name="use_sim_time" default="false" />
  <arg name="debug"        default="false" />
  <arg name="start_world_diana_gripper_tf_publisher"  default="true" />
  <arg name="start_gui" default="true" />
  <arg name="start_gui_individual" default="false" />
  <arg name="tactile_sensors" default="true" />


  <!-- upload the robot xacro/urdf to the param server -->
  <param name="robot_description" 
         command="$(find xacro)/xacro $(find diana_gripper)/urdf/diana_gripper_standalone.xacro" />


  <!-- upload the default calibration values to the param server -->
  <rosparam file="$(find diana_gripper)/config/diana_gripper_calibration.yaml" command="load"/>


  <group if="$(arg start_world_diana_gripper_tf_publisher)">
    <node pkg="tf" type="static_transform_publisher" 
          name="static_world_diana_gripper_tf_publisher" args="0.0 0 0.1 0 0 0 world diana_gripper 100" />
  </group>


  <!-- the driver node, talking to the gripper using the specifed port and (virtual) baudrate -->
  <node pkg="diana_gripper" type="diana_gripper_driver.py" name="diana_gripper" output="screen" >
        <param name="rate_hz" value="1125" />
        <param name="baud_rate" value="115200" />
        <param name="port_name" value="/dev/ttyACM0" />
        <!-- <remap from="joint_states" to=" /> -->
  </node>



  <!-- load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find diana_gripper)/config/diana_gripper_gazebo_controllers.yaml" command="load"/>



 <!-- publishes robot-state, reading the urdf robot model from "doro_description",
       subscribing to /joint_states and publishing to /tf -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" respawn="false"
        name="diana_gripper_state_publisher">
     <param name="publish_frequency" type="double" value="100.0" />
     <param name="tf_prefix" type="string" value="" />
     <param name="robot_description" command="$(find xacro)/xacro $(find diana_gripper)/urdf/diana_gripper_standalone.xacro" /> 
     <remap from="joint_states" to="diana_gripper/joint_states" />
  </node>


  <!-- not needed because diana_gripper_driver already publishes the joint state
  <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" respawn="false">
     <param name="use_gui" value="true" />
     <remap from="joint_states" to="diana_gripper/joint_states" />
  </node>
  -->

  <group if="$(arg start_gui)">
      <group if="$(arg start_gui_individual)">
      <node pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" name="joint_state_publisher_gui" 
            respawn="false">
            <param name="rate" value="10.0" />
            <remap from="joint_states" to="diana_gripper/joint_goals" />
      </node>
      </group>
      <group unless="$(arg start_gui_individual)">
            <param name="fake_parallel_gripper_description" 
         command="$(find xacro)/xacro $(find diana_gripper)/urdf/fake_parallel_gripper.xacro" />
            <node pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" 
        name="fake_parallel_gripper_joint_state_publisher" respawn="false">
                  <param name="rate" value="30.0" />
                  <remap from="robot_description" to="fake_parallel_gripper_description" />
                  <remap from="joint_states" to="diana_gripper/simple_goal" />
            </node>
      </group>
  </group>


  <!-- the FollowJointTrajectoryAction server (e.g. needed for Moveit) -->
  <node pkg="diana_gripper" type="diana_gripper_fjtas.py" name="diana_gripper_fjtas" output="screen" >
     <remap from="/diana_gripper_fjtas/joint_goals" to="/diana_gripper/joint_goals" />
     <remap from="/diana_gripper_fjtas/joint_states" to="/diana_gripper/joint_states" />
  </node>


  <node name="rviz" pkg="rviz" type="rviz" respawn="false" output="screen"
        args="-d $(find diana_gripper)/config/diana_gripper_demo.rviz" />

  
  <group if="$(arg tactile_sensors)">
    <include file="$(find tams_tactile_sensor_array)/launch/tactile_sensor_diana.launch">
    </include>
  </group>

</launch>
